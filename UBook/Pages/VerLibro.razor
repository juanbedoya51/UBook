@page "/infolibro/{Id:int}"
@inject HttpClient HttpClient
@using System.Net.Http.Json
@using UBook.Data
@using System.Globalization;
@using Newtonsoft.Json;
@inject NavigationManager oMenu
@inject IJSRuntime JSRuntime
@using System;


<PageTitle>Info Libro</PageTitle>
<Toasts class="p-3" Messages="messages" AutoHide="true" Delay="6000" Placement="ToastsPlacement.BottomRight" />

<div class="row" style="color: #8F8E8E;font-family: 'Poppins';">
    <div class="col-md-6" style="text-align:center">
        <img src="@($"data:image/jpeg;base64,{nuevoLibro.imagen}")" alt="Producto" class="img-fluid" style="width:125px" />
    </div>
    <div class="col-md-4" style="text-align:center">
        <h3>Info. Libro</h3>

        <div class="row">
            <div class="col-md-6">
                <p><strong>Nombre:</strong> @nuevoLibro.nombre</p>
                <p><strong>Autor:</strong> @nuevoLibro.autor</p>
                <p><strong>Editorial:</strong> @nuevoLibro.editorial</p>
                <p><strong>Género:</strong> @nuevoLibro.genero</p>
                <p><strong>Idioma:</strong> @nuevoLibro.idioma</p>
            </div>
            <div class="col-md-6">
                <p><strong>Número de Páginas:</strong> @nuevoLibro.nopagina</p>
                <p><strong>ISSN:</strong> @nuevoLibro.issn</p>
                <p><strong>Fecha de Publicación:</strong> @nuevoLibro.fecha.ToString("dd/MM/yyyy")</p>
                <p><strong>Precio:</strong> @nuevoLibro.precio.ToString("C0",CultureInfo.CreateSpecificCulture("en-US"))</p>
            </div>
        </div>

        <div class="col">
            <div class="row btn" @onclick="ComprarLibro">
                <i class="bi bi-cart3" style="font-size:30px; color:green"></i>
                <h5>Comprar</h5>
            </div>
            <div class="row btn" @onclick="ReservarLibro">
                <i class="bi bi-bag-check" style="font-size:30px; color: #DEBD29"></i>
                <h5>Reservar</h5>
            </div>
        </div>

    </div>
</div>
@code {
    [Parameter]
    public int Id { get; set; }

    private Libro nuevoLibro = new Libro();
    private string mensaje = "";
    private string Url = "libros.php";
    private bool carga { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task ReservarLibro()
    {
        // Lógica para reservar el libro
        // Puedes implementar esta lógica según tus requisitos
        ShowMessage(ToastType.Info, "Libro reservado con éxito");
    }

    private async Task ComprarLibro()
    {
        // Lógica para comprar el libro
        // Puedes implementar esta lógica según tus requisitos
        ShowMessage(ToastType.Success, "Libro comprado con éxito");
    }

    List<ToastMessage> messages = new List<ToastMessage>();

    private void ShowMessage(ToastType toastType, string obser) => messages.Add(CreateToastMessage(toastType, obser));

    private ToastMessage CreateToastMessage(ToastType toastType, string obser)
    => new ToastMessage
        {
            Type = toastType,
            Title = "UBook Notificación",
            HelpText = $"{DateTime.Now}",
            Message = obser,
        };
}
